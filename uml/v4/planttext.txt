@startuml

title Classes - Inheritance and composition

class PayrollSystem{
    +calculate_payroll(employees: List<Employee>): void
}

class ProductivitySystem{
    +track(employees: List<object>, hours: int): void
}

class Employee{
    id: int
    name: String
    Employee(id, name)
}

class SalaryEmployee{
    weekly_salary: float
    SalaryEmployee(id, name, weekly_salary)
    +calculate_payroll(): float
}

class HourlyEmployee{
    hours_worked: int
    hour_rate: float
    HourlyEmployee(id, name, hours_worked, hour_rate)
    +calculate_payroll(): float
}

class CommissionEmployee{
    commission: int
    CommissionEmployee(id, name, weekly_salary, commission)
    +calculate_payroll(): float
}

class Manager{
    +work(hours: int): void
}

class Secretary{
    +work(hours: int): void
}

class TemporarySecretary{
    TemporarySecretary(id, name, hours_worked, hour_rate)
    +calculate_payroll(): float
}

class SalesPerson{
   +work(hours: int): void
}

class FactoryWorker{
    +work(hours: int): void
}

Employee <|-- SalaryEmployee
Employee <|-- HourlyEmployee
HourlyEmployee <|-- FactoryWorker
SalaryEmployee <|-- CommissionEmployee
SalaryEmployee <|-- Manager
SalaryEmployee <|-- Secretary
Secretary <|-- TemporarySecretary
HourlyEmployee <|-- TemporarySecretary
CommissionEmployee <|-- SalesPerson
PayrollSystem ..> Employee
ProductivitySystem ..> Manager
ProductivitySystem ..> Secretary
ProductivitySystem ..> FactoryWorker
ProductivitySystem ..> SalesPerson
note right of TemporarySecretary::"TemporarySecretary(id, name, hours_worked, hour_rate)"
  Call HourlyEmployee constructor
end note

@enduml